// Code generated by protoc-gen-go. DO NOT EDIT.
// source: trivia.proto

package trivia

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/ptypes/empty"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GiveQuestionInput_Difficulty int32

const (
	GiveQuestionInput_ANY    GiveQuestionInput_Difficulty = 0
	GiveQuestionInput_EASY   GiveQuestionInput_Difficulty = 1
	GiveQuestionInput_MEDIUM GiveQuestionInput_Difficulty = 2
	GiveQuestionInput_HARD   GiveQuestionInput_Difficulty = 3
)

var GiveQuestionInput_Difficulty_name = map[int32]string{
	0: "ANY",
	1: "EASY",
	2: "MEDIUM",
	3: "HARD",
}
var GiveQuestionInput_Difficulty_value = map[string]int32{
	"ANY":    0,
	"EASY":   1,
	"MEDIUM": 2,
	"HARD":   3,
}

func (x GiveQuestionInput_Difficulty) String() string {
	return proto.EnumName(GiveQuestionInput_Difficulty_name, int32(x))
}
func (GiveQuestionInput_Difficulty) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_trivia_0da94e25ee1afaa5, []int{0, 0}
}

type GiveQuestionInput struct {
	Difficulty           GiveQuestionInput_Difficulty `protobuf:"varint,1,opt,name=difficulty,proto3,enum=trivia.GiveQuestionInput_Difficulty" json:"difficulty,omitempty"`
	RequestingUserID     string                       `protobuf:"bytes,2,opt,name=RequestingUserID,proto3" json:"RequestingUserID,omitempty"`
	ChannelID            string                       `protobuf:"bytes,3,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *GiveQuestionInput) Reset()         { *m = GiveQuestionInput{} }
func (m *GiveQuestionInput) String() string { return proto.CompactTextString(m) }
func (*GiveQuestionInput) ProtoMessage()    {}
func (*GiveQuestionInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_trivia_0da94e25ee1afaa5, []int{0}
}
func (m *GiveQuestionInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GiveQuestionInput.Unmarshal(m, b)
}
func (m *GiveQuestionInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GiveQuestionInput.Marshal(b, m, deterministic)
}
func (dst *GiveQuestionInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GiveQuestionInput.Merge(dst, src)
}
func (m *GiveQuestionInput) XXX_Size() int {
	return xxx_messageInfo_GiveQuestionInput.Size(m)
}
func (m *GiveQuestionInput) XXX_DiscardUnknown() {
	xxx_messageInfo_GiveQuestionInput.DiscardUnknown(m)
}

var xxx_messageInfo_GiveQuestionInput proto.InternalMessageInfo

func (m *GiveQuestionInput) GetDifficulty() GiveQuestionInput_Difficulty {
	if m != nil {
		return m.Difficulty
	}
	return GiveQuestionInput_ANY
}

func (m *GiveQuestionInput) GetRequestingUserID() string {
	if m != nil {
		return m.RequestingUserID
	}
	return ""
}

func (m *GiveQuestionInput) GetChannelID() string {
	if m != nil {
		return m.ChannelID
	}
	return ""
}

type AnswerQuestionInput struct {
	QuestionID           string   `protobuf:"bytes,1,opt,name=QuestionID,proto3" json:"QuestionID,omitempty"`
	RequestingUserID     string   `protobuf:"bytes,2,opt,name=RequestingUserID,proto3" json:"RequestingUserID,omitempty"`
	ChannelID            string   `protobuf:"bytes,3,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	Answer               string   `protobuf:"bytes,4,opt,name=Answer,proto3" json:"Answer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnswerQuestionInput) Reset()         { *m = AnswerQuestionInput{} }
func (m *AnswerQuestionInput) String() string { return proto.CompactTextString(m) }
func (*AnswerQuestionInput) ProtoMessage()    {}
func (*AnswerQuestionInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_trivia_0da94e25ee1afaa5, []int{1}
}
func (m *AnswerQuestionInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnswerQuestionInput.Unmarshal(m, b)
}
func (m *AnswerQuestionInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnswerQuestionInput.Marshal(b, m, deterministic)
}
func (dst *AnswerQuestionInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnswerQuestionInput.Merge(dst, src)
}
func (m *AnswerQuestionInput) XXX_Size() int {
	return xxx_messageInfo_AnswerQuestionInput.Size(m)
}
func (m *AnswerQuestionInput) XXX_DiscardUnknown() {
	xxx_messageInfo_AnswerQuestionInput.DiscardUnknown(m)
}

var xxx_messageInfo_AnswerQuestionInput proto.InternalMessageInfo

func (m *AnswerQuestionInput) GetQuestionID() string {
	if m != nil {
		return m.QuestionID
	}
	return ""
}

func (m *AnswerQuestionInput) GetRequestingUserID() string {
	if m != nil {
		return m.RequestingUserID
	}
	return ""
}

func (m *AnswerQuestionInput) GetChannelID() string {
	if m != nil {
		return m.ChannelID
	}
	return ""
}

func (m *AnswerQuestionInput) GetAnswer() string {
	if m != nil {
		return m.Answer
	}
	return ""
}

func init() {
	proto.RegisterType((*GiveQuestionInput)(nil), "trivia.GiveQuestionInput")
	proto.RegisterType((*AnswerQuestionInput)(nil), "trivia.AnswerQuestionInput")
	proto.RegisterEnum("trivia.GiveQuestionInput_Difficulty", GiveQuestionInput_Difficulty_name, GiveQuestionInput_Difficulty_value)
}

func init() { proto.RegisterFile("trivia.proto", fileDescriptor_trivia_0da94e25ee1afaa5) }

var fileDescriptor_trivia_0da94e25ee1afaa5 = []byte{
	// 309 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x29, 0xca, 0x2c,
	0xcb, 0x4c, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0xa4, 0xa4, 0xd3, 0xf3,
	0xf3, 0xd3, 0x73, 0x52, 0xf5, 0xc1, 0xa2, 0x49, 0xa5, 0x69, 0xfa, 0xa9, 0xb9, 0x05, 0x25, 0x95,
	0x10, 0x45, 0x4a, 0xb7, 0x18, 0xb9, 0x04, 0xdd, 0x33, 0xcb, 0x52, 0x03, 0x4b, 0x53, 0x8b, 0x4b,
	0x32, 0xf3, 0xf3, 0x3c, 0xf3, 0x0a, 0x4a, 0x4b, 0x84, 0x5c, 0xb8, 0xb8, 0x52, 0x32, 0xd3, 0xd2,
	0x32, 0x93, 0x4b, 0x73, 0x4a, 0x2a, 0x25, 0x18, 0x15, 0x18, 0x35, 0xf8, 0x8c, 0x54, 0xf4, 0xa0,
	0xa6, 0x63, 0x28, 0xd7, 0x73, 0x81, 0xab, 0x0d, 0x42, 0xd2, 0x27, 0xa4, 0xc5, 0x25, 0x10, 0x94,
	0x5a, 0x08, 0x56, 0x99, 0x97, 0x1e, 0x5a, 0x9c, 0x5a, 0xe4, 0xe9, 0x22, 0xc1, 0xa4, 0xc0, 0xa8,
	0xc1, 0x19, 0x84, 0x21, 0x2e, 0x24, 0xc3, 0xc5, 0xe9, 0x9c, 0x91, 0x98, 0x97, 0x97, 0x9a, 0xe3,
	0xe9, 0x22, 0xc1, 0x0c, 0x56, 0x84, 0x10, 0x50, 0x32, 0xe5, 0xe2, 0x42, 0xd8, 0x21, 0xc4, 0xce,
	0xc5, 0xec, 0xe8, 0x17, 0x29, 0xc0, 0x20, 0xc4, 0xc1, 0xc5, 0xe2, 0xea, 0x18, 0x1c, 0x29, 0xc0,
	0x28, 0xc4, 0xc5, 0xc5, 0xe6, 0xeb, 0xea, 0xe2, 0x19, 0xea, 0x2b, 0xc0, 0x04, 0x12, 0xf5, 0x70,
	0x0c, 0x72, 0x11, 0x60, 0x56, 0x9a, 0xce, 0xc8, 0x25, 0xec, 0x98, 0x57, 0x5c, 0x9e, 0x5a, 0x84,
	0xea, 0x3d, 0x39, 0x2e, 0x2e, 0xb8, 0x80, 0x0b, 0xd8, 0x7b, 0x9c, 0x41, 0x48, 0x22, 0xd4, 0x73,
	0xb8, 0x90, 0x18, 0x17, 0x1b, 0xc4, 0x01, 0x12, 0x2c, 0x60, 0x29, 0x28, 0xcf, 0x68, 0x12, 0x23,
	0x17, 0x5b, 0x08, 0x38, 0x38, 0x85, 0x1c, 0xb9, 0x78, 0x90, 0x43, 0x54, 0x48, 0x12, 0x67, 0x38,
	0x4b, 0x89, 0xe9, 0x41, 0xa2, 0x52, 0x0f, 0x16, 0x95, 0x7a, 0xae, 0xa0, 0xa8, 0x14, 0x72, 0xe5,
	0xe2, 0x43, 0xf5, 0xa6, 0x90, 0x34, 0xcc, 0x10, 0x2c, 0xde, 0xc7, 0x65, 0x8c, 0x13, 0x47, 0x14,
	0x34, 0xc9, 0x24, 0xb1, 0x81, 0x65, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x3d, 0xbf,
	0xd5, 0x51, 0x02, 0x00, 0x00,
}
